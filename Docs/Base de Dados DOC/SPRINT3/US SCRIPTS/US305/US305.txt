--Main Function

--This function returns the container route inside a cursor

create or replace function fnGetContainerRouteCursor(vClientID in CLIENT.ID%type,
                                          vContainerID in CONTAINER.CONTAINERID%type) return SYS_REFCURSOR
    is
    route_Cursor SYS_REFCURSOR;
    invalid_container exception;
    data_not_found exception;
    vCargoManifestID CONTAINERCLIENT.CARGOMANIFESTID%type;
    vVerifyIntegrity NUMBER;

    --First is necessary to have a cursor that saves all the available cargoManifests from a specific container of a client in order to have his full route

    CURSOR c1
        is select CARGOMANIFESTID
           from CONTAINERCLIENT
           where CONTAINERID = vContainerID
             and CLIENTID = vClientID;

begin

    open c1;

    --In case that the container does not exit or the cargo manifest does not exit, or even, this container does not belong to the introduced user . If that happens a exception must be raised

    if (c1%notfound) then
        raise invalid_container;
    end if;

    --Open a loop to traverse all available cargoManifests inside the cursor (exit when there is no more information to traverse)

    LOOP
        FETCH c1 into
            vCargoManifestID;
        EXIT WHEN (c1%notfound);

        begin

            --Before selecting the desired data, it is necessary to see if there is available data for the route. That means, if the vehicle name exists, the facility name exists , if the dates exist ... etc... in order to achieve that we must do a query to select the number of "rows" available for that specific information, if it returns 1 there is available data to be placed inside the cursor if not we can not add nothing to the cursor with those information , because there can be a error in the data integrity

            --In this case we are going to see if the vehicle is a Ship, if the vehicle is not a ship we must instead query the truck instead of the ship table

            SELECT COUNT(*)
            INTO vVerifyIntegrity
            FROM SHIP s
            WHERE s.VEHICLEID = (SELECT F.VEHICLEID
                                 from FACILITY
                                          inner join FACILITYTRIP F on FACILITY.FACILITYID = F.FACILITYID
                                 where F.FACILITYID =
                                       (select FACILITYID
                                        from FACILITYTRIP ft
                                        where ft.IDTRIP = (Select cmf.IDTRIP
                                                           from CARGOMANIFEST cmf
                                                           where cmf.CARGOMANIFESTID = vCargoManifestID)));

            if (vVerifyIntegrity = 1) THEN


                -- If there is data, we are going to open the cursor and there for insert the desired data to be returned

                open route_Cursor for
                    select v.Name              VEHICLE_NAME,
                           f.Name              FACILITY_NAME,
                           t.StartDate         TRIP_START_DATE,
                           t.EndDate           TRIP_END_DATE,
                           c.CARGOMANIFESTDATE CARGOMANIFEST_DATE
                    from FACILITY f
                             inner join FACILITYTRIP FT on f.FACILITYID = FT.FACILITYID,
                         SHIP v,
                         TRIP t,
                         CARGOMANIFEST c
                    where c.CARGOMANIFESTID = vCargoManifestID
                      and t.IDTRIP = (Select cmf.IDTRIP
                                      from CARGOMANIFEST cmf
                                      where cmf.CARGOMANIFESTID = vCargoManifestID)
                      and f.FACILITYID = (select FACILITYID
                                          from FACILITYTRIP ft
                                          where ft.IDTRIP = (Select cmf.IDTRIP
                                                             from CARGOMANIFEST cmf
                                                             where cmf.CARGOMANIFESTID = vCargoManifestID))
                      and v.VEHICLEID = (SELECT F.VEHICLEID
                                         from FACILITY
                                                  inner join FACILITYTRIP F on FACILITY.FACILITYID = F.FACILITYID
                                         where F.FACILITYID =
                                               (select FACILITYID
                                                from FACILITYTRIP ft
                                                where ft.IDTRIP = (Select cmf.IDTRIP
                                                                   from CARGOMANIFEST cmf
                                                                   where cmf.CARGOMANIFESTID = vCargoManifestID)));

            ELSE

                --If the vehicle is a truck we must select the information from the truck , utilizing the same query as before

                open route_Cursor for
                    select v.Name              VEHICLE_NAME,
                           f.Name              FACILITY_NAME,
                           t.StartDate         TRIP_START_DATE,
                           t.EndDate           TRIP_END_DATE,
                           c.CARGOMANIFESTDATE CARGOMANIFEST_DATE
                    from FACILITY f
                             inner join FACILITYTRIP FT on f.FACILITYID = FT.FACILITYID,
                         TRUCK v,
                         TRIP t,
                         CARGOMANIFEST c
                    where c.CARGOMANIFESTID = vCargoManifestID
                      and t.IDTRIP = (Select cmf.IDTRIP
                                      from CARGOMANIFEST cmf
                                      where cmf.CARGOMANIFESTID = vCargoManifestID)
                      and f.FACILITYID = (select FACILITYID
                                          from FACILITYTRIP ft
                                          where ft.IDTRIP = (Select cmf.IDTRIP
                                                             from CARGOMANIFEST cmf
                                                             where cmf.CARGOMANIFESTID = vCargoManifestID))
                      and v.VEHICLEID = (SELECT F.VEHICLEID
                                         from FACILITY
                                                  inner join FACILITYTRIP F on FACILITY.FACILITYID = F.FACILITYID
                                         where F.FACILITYID =
                                               (select FACILITYID
                                                from FACILITYTRIP ft
                                                where ft.IDTRIP = (Select cmf.IDTRIP
                                                                   from CARGOMANIFEST cmf
                                                                   where cmf.CARGOMANIFESTID = vCargoManifestID)));

            end if;

        end;

    end loop;

    close c1;

    --Finally, we return the cursor with all data

    return (route_Cursor);

EXCEPTION
    WHEN
        invalid_container THEN
        raise_application_error(-200001,
                                'Invalid Container or client! There is no container assigned to the specified client');
        return (null);
end;
/

--Get Vehicle Type Function (Auxiliar function)

--In this function we get the type of the vehicle that was used to perform a certain operation (Used in Java implementation)

create or replace function fnGetVehicleType(vVehicleName in varchar2)
    return varchar2 is
    vVehicleType varchar2(32);
    vNumber      number;

begin

    --A query to verify if the vehicle is a ship or a truck , in case of ship we assume the variable that is going to be returned as "ship" else its a "truck"

    Select COUNT(*)
    into vNumber
    from SHIP s
    where s.NAME = vVehicleName;

    IF (vNumber = 1) THEN
        vVehicleType := 'SHIP';

    ELSE
        vVehicleType := 'TRUCK';

    end if;


    return (vVehicleType);

end;
/

-- Compile Function

ALTER FUNCTION FNGETCONTAINERROUTECURSOR compile;

-- Drop Function

DROP FUNCTION FNGETCONTAINERROUTECURSOR;

-- Test the  main function

declare
	result SYS_REFCURSOR;
	VCLIENTID CLIENT.ID %TYPE := 1;
	VCONTAINERID CONTAINER.CONTAINERID %TYPE := 2579;
begin
	result := FNGETCONTAINERROUTECURSOR(
		VCLIENTID => VCLIENTID,
		VCONTAINERID => VCONTAINERID
	);
end;


