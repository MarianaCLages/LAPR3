@startuml
'https://plantuml.com/class-diagram
class FindAvailableShipsUI{
}
class FindAvailableShipsController{
}
FindAvailableShipsUI ..> FindAvailableShipsController
FindAvailableShipsController ..> Company

class OccupancyRateUI{
}

class OccupancyRateController{
}
OccupancyRateController -> ShipStore
OccupancyRateController ..> Company
class CargoManifest{
-String identification
-AVL offloaded
-AVL loaded
+getIdentification()
}
class Container{
-String identification
-int payload
-int tare
-int gross
-String isoCode
-ContainerPosition position
-boolean isRefrigerated
-boolean toOffload
}
Ship --> CargoManifest
CargoManifest --> Container

class AverageCargoByYearUI{
}

class AverageCargoByYearController{
}
AverageCargoByYearUI --> AverageCargoByYearController
AverageCargoByYearController --> Company

class LoadedShipsUI{
}

class LoadedShipsController{
}
LoadedShipsUI ..> ListShipsController
ListShipsController ..> Company
class PortStore{
-TwoDTree portList
+getPortList()
+getNearestNeighbourByTime(
}

class Port{
-String continent
-String country
-String identification
-String name
-FacilityLocation location
}
Company --> PortStore
PortStore -> Port

class OffLoadedUI{
}

class OffLoadedController{
}
OffLoadedUI ..> OffLoadedController
OffLoadedController ..> Company

class ContainerStore{
-ContainerAVL
+getContainer()
}
Company --> ContainerStore
ContainerStore --> Container

class CargoManifestStore{
-CargoManifestAVL
}
Company --> CargoManifestStore
CargoManifestStore --> CargoManifest

class SearchContainerLocationByClientUI{
}

class SearchContainerLocationByClientUI{
}
SearchContainerLocationByClientUI ..> SearchContainerLocationByClientController
SearchContainerLocationByClientController ..> Company

class ImportPortsUI{
}

class ImportPortsController{
}

class PortImporter{
}
ImportPortsUI ..> ImportPortsController
ImportPortsController ..> PortImporter

PortImporter ..> Company
class ImportShipsUI{
}

class ImportShipsController{
+importShips(path)
}

class ClosestPortUI{
}
class ClosestPortController{
}

class ShipImporter{
}
ClosestPortUI ..> ClosestPortController
ClosestPortController ..> Company

class CsvUtils{
+readFile(path)
}

class ShipStore{
+getShip(mmsi)
+exists(mmsi);
+getlShip()
+sortedList()
+getTopN()
+getShipByMMSI()
+getShipByIMO()
+getShipByCallSign()
+transformAVLIntoListPairsOfShip()
+getShipSummaryByMMSI()
+getShipSummaryByIMO()
+getShipSummaryByCallSign()
-getShipSummaryStructure()
+getFirstDate()
+getLastDate()
+differenceBetweenDates()
+gextMaxSog()
+getMeanSog()
+getMaxCog()
+getMeanCog()
+getDepartureLatitude()
+getDepartureLongitude()
+getArrivalLatitude()
+getArrivalLongitude()
}

class Ship{
-transceiverClass
-posDate
-cargo
-mmsi
-name
-imo
-numGen
-genPowerOutput
-callSign
-vesselType
-length
-width
-capacity
-draft
+addPosition(position)
+getPosition(date)
+writeAllPos()
+organizeDatePos()
+checkMMSI()
+checkIMO()
+addNewPosMessage(position)
+getMmsi()
+getName()
+getNumGen()
+getCallSign()
+getVesselType()
+getLength()
+getWidth()
+getCapacity()
+getGenPowerOutput()
+getTravelledDistance()
+getTotalNumberOfMovements(ship)
+getDeltaDistance()
+getVesselType()
}

class Position{
-latitude
-longitude
-heading
-sog
-cog
-date
+getLatitude()
+getLongitude()
+getHeading()
+getSog()
+getCog()
}

class PositionTree{
+add(position)
-positionTree
+getSmallestPosition()
+getBiggestPosition()
+getSize()
+getOrderList()
+getPosition()
+getInOrderList()
}

class SearchShipUI{

}

class SearchShipController{
  +searchShipByMMSI(mmsi)
  +searchShipByIMO(imo)
  +searchShipByCallSign(callsign)
}



class TopPairsUI{
+run()
}

class Company{
-ShipStore
+getShipStore()
}

class TopPairsController{
+getPairs()
}

class ShipStore{
+getPairsOfShipsString()
-getPairsOfShipsInsideBST()
}

class PositionalMessagesUI{
}

class PositionalMessagesController{
+writePositionMessages()
}

class ListShipsUI{
}

class ListShipsController{
+getShipList()
+sortedList()
+getShipListDTO()
}
class ShipMapper{
+toDTO(ship)
}
class ShipDto{
+toDTO()
}

class TopNShipsUI{
}

class TopNShipsController{
+getTopNShips()
}


class GenerateShipSummaryUI{
}
class GenerateShipSummaryController{
+getShipSummaryByMMSI()
+getShipSummaryByIMO()
+getShipSummaryByCallSign()
}



ImportShipsUI ..> ImportShipsController
ImportShipsController ..> ShipImporter
ShipImporter ..> CsvUtils
ShipImporter ..> Company
ShipStore --> Ship
Ship -> PositionTree
Ship --> Position
PositionTree --> Position
SearchShipUI ..> SearchShipController
SearchShipController ..> Company
TopPairsUI ..> TopPairsController
TopPairsController ..> Company
Company --> ShipStore

PositionalMessagesUI ..> PositionalMessagesController
PositionalMessagesController ..> Company

ListShipsUI ..> ShipDto
ListShipsUI ..> ListShipsController
ListShipsController ..>ShipMapper
ShipMapper ..> ShipDto
ListShipsController ..> Company

TopNShipsUI ..> TopNShipsController
TopNShipsController ..> Company

GenerateShipSummaryUI ..> GenerateShipSummaryController
GenerateShipSummaryController ..> Company
GenerateShipSummaryController ..> ShipStore
Company --> Ship

@enduml